{
  "name": "AI Agent Nutritionist",
  "nodes": [
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data.base64",
        "binaryPropertyName": "dataDownload",
        "options": {
          "fileName": "={{ $('Webhook1').item.json.body.data.pushName + '_' + $now.toFormat('dd.MM.yy.HH.mm.ss') + '.jpeg' }}\n",
          "mimeType": "={{ $json.data.mimetype }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        400,
        928
      ],
      "id": "a283e581-c5e3-4e34-917c-17b2beced197",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "resource": "chat-api",
        "operation": "get-media-base64",
        "instanceName": "BotJornada",
        "messageId": "={{ $json.body.data.key.id }}"
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        192,
        928
      ],
      "id": "7f52c744-6eda-4900-b273-a761030e4b03",
      "name": "DownloadImage",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "evolutionApi": {
          "id": "1MKz5fbcqpncZpMN",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "BotJornada",
        "remoteJid": "={{ $('Webhook1').item.json.body.data.key.remoteJid }}",
        "messageText": "={{ $json.output.resumo }}",
        "options_message": {
          "delay": 3000
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1680,
        1056
      ],
      "id": "a8bd1b35-7430-49c6-891b-812edb6fa2f3",
      "name": "RespondToUser",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "evolutionApi": {
          "id": "1MKz5fbcqpncZpMN",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "content": "## PROCESSAMENTO DE IMAGEM",
        "height": 480,
        "width": 1000
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -96,
        784
      ],
      "id": "7e13fc18-fb2b-41a4-b096-96c443873425",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.data.message.conversation }}",
                    "rightValue": "[undefined]",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "ea666ce3-c656-4b66-bde0-1869e8c8444c"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "isText"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4d0ea9be-fa53-410a-89da-3929f27fb844",
                    "leftValue": "={{ $json.body.data.message.imageMessage.mimetype }}",
                    "rightValue": "image/jpeg",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "isImage"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        432,
        432
      ],
      "id": "57f72e24-d606-4f06-a025-091f4b4808a5",
      "name": "TypeMessage"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1104,
        1104
      ],
      "id": "9582b45a-ddb3-44ae-98d7-377da8776a23",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "LxESPA7gaRJpmXmF",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Sua tarefa √© analisar a imagem enviada e retornar uma resposta estruturada com base no conte√∫do visual. Siga as regras abaixo **na ordem de prioridade**:\n\n1. Se a imagem for de um **prato de comida**, identifique:\n   - Os **alimentos vis√≠veis** (por nome, como arroz, feij√£o, carne, salada etc).\n   - Uma **estimativa da por√ß√£o** de cada alimento (pequena, m√©dia ou grande).\n   - A **estimativa de calorias totais** no prato.\n\nResponda exatamente no seguinte formato:\n\n\"Prato identificado\"\n\"Alimentos: [lista de alimentos com por√ß√£o estimada]\"\n\"Calorias estimadas: [valor aproximado em kcal]\"\n\n**Exemplo:**\n\nPrato identificado\nAlimentos: arroz (m√©dio), feij√£o (pequeno), frango grelhado (m√©dio), salada (grande)\nCalorias estimadas: 620 kcal\nProteina estimada: 40 gramas\n\n\n2. Se a imagem **n√£o for de comida**, retorne:\n\nüëâ \"Imagem fora do contexto nutricional\"  \nüëâ \"Descri√ß√£o: [descri√ß√£o gen√©rica da imagem]\"\n\n---\n\nüìå **Notas importantes:**\n\n- Sempre verifique se a imagem realmente mostra **comida no prato**.\n- Use nomes comuns de alimentos e **evite termos t√©cnicos**.\n- Se a imagem estiver desfocada ou for inconclusiva, retorne como \"Imagem fora do contexto nutricional\" com uma descri√ß√£o apropriada.\n\nTodas as respostas devem ser escritas **em portugu√™s** e seguir **exatamente o formato acima**.\n\nSe quiser, posso preparar tamb√©m o prompt do segundo agente (que faz a recomenda√ß√£o nutricional com base nos alimentos detectados). Deseja isso?\n",
        "inputType": "base64",
        "binaryPropertyName": "dataDownload",
        "options": {
          "detail": "low"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        576,
        928
      ],
      "id": "903dfee2-53b4-4b80-b290-a6873557a95d",
      "name": "Vision",
      "retryOnFail": true,
      "waitBetweenTries": 3000,
      "credentials": {
        "openAiApi": {
          "id": "LxESPA7gaRJpmXmF",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "## GERENCIADOR DE MENSAGEM\n ",
        "height": 460,
        "width": 996
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -96,
        304
      ],
      "id": "1f41ba99-93e9-441e-a6fe-d9ce754c34eb",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "BotJornada",
        "remoteJid": "={{ $json.body.data.key.remoteJid }}",
        "messageText": "=Seja bem-vindo! üòÑ\nO que voc√™ comeu hoje? Me manda uma foto do seu prato e eu te conto quantas calorias tem a√≠!",
        "options_message": {
          "delay": 3000
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        688,
        336
      ],
      "id": "dc822ac9-0c8c-4cf5-9475-647c0d6cdb0b",
      "name": "WelcomeMessage",
      "credentials": {
        "evolutionApi": {
          "id": "1MKz5fbcqpncZpMN",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "content": "## REGISTRA REFEI√á√ÉO\n",
        "height": 480,
        "width": 1000
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        928,
        784
      ],
      "id": "48e79446-20af-4142-9694-0cd84fc8a37f",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a897cbf4-f60a-493f-814d-75093074c478",
              "name": "conversation",
              "value": "=Imagem enviada pelo usu√°rio: \n{{$node[\"Vision\"].json[\"content\"]}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        752,
        928
      ],
      "id": "78fc062f-4fcb-4963-8cd8-908abab3f90f",
      "name": "formatToLLM3"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        0,
        928
      ],
      "id": "c941dccb-a0c8-4177-8377-2bac8caee48e",
      "name": "Wait5s1",
      "webhookId": "ee000aa0-a36a-4465-b356-c0befe47cd31"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "c9d2ebfb-f621-4bbb-b9cd-394616f43aa5",
        "options": {
          "binaryPropertyName": "data"
        }
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        192,
        432
      ],
      "id": "c0e09466-a9c7-481e-a11f-e152305ce2f1",
      "name": "Webhook1",
      "webhookId": "be1cf545-4e58-4129-8f58-4ee58819dd5d"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1ug3tnzSFttJhwdJKQpxLKCPANhLcI1kgjwQgQddEzws",
          "mode": "list",
          "cachedResultName": "registrarRefeicao",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ug3tnzSFttJhwdJKQpxLKCPANhLcI1kgjwQgQddEzws/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "P√°gina1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ug3tnzSFttJhwdJKQpxLKCPANhLcI1kgjwQgQddEzws/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "data": "={{ $json.output.data }}",
            "hora": "={{ $json.output.hora }}",
            "refeicao": "={{ $json.output.refeicao }}",
            "calorias": "={{ $json.output.calorias }}",
            "proteina": "={{ $json.output.proteina }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "data",
              "displayName": "data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "hora",
              "displayName": "hora",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "refeicao",
              "displayName": "refeicao",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "calorias",
              "displayName": "calorias",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "proteina",
              "displayName": "proteina",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1680,
        848
      ],
      "id": "a6a17b44-5cdc-482c-b301-828f83633276",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "jGZrBabupy9L5lUE",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"data\": \"2025-07-24\",\n  \"hora\": \"12:45\",\n  \"refeicao\": \"Almo√ßo\",\n  \"calorias\": 680,\n  \"proteina\": 45,\n  \"resumo\": \"‚úÖ Refei√ß√£o registrada com sucesso! Foram aproximadamente 680 kcal e 45g de prote√≠na no almo√ßo de hoje, √†s 12:45. Continue firme!\"\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1328,
        1088
      ],
      "id": "2e907174-656d-4b1c-ad54-eed6ed63ed09",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a897cbf4-f60a-493f-814d-75093074c478",
              "name": "conversation",
              "value": "={{ $json.body.data.message.conversation }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        688,
        560
      ],
      "id": "3b69fcd7-1f1d-4779-b4a3-59d68a25b580",
      "name": "formatToLLM"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "BotJornada",
        "remoteJid": "={{ $('Webhook1').item.json.body.data.key.remoteJid }}",
        "messageText": "={{ $json.output }}",
        "options_message": {
          "delay": 3000
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1648,
        432
      ],
      "id": "a886d71e-d74b-4759-8dfa-6b6192ad4963",
      "name": "RespondToUser1",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "evolutionApi": {
          "id": "1MKz5fbcqpncZpMN",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.conversation }}",
        "options": {
          "systemMessage": "=Voc√™ √© um agente nutricionista que recebe perguntas em texto pelo WhatsApp. Sua fun√ß√£o √© interpretar essas mensagens e consultar os dados registrados anteriormente em uma planilha de alimenta√ß√£o.\n\nVoc√™ conta com uma ferramenta chamada `ConsultaNutricional`, que retorna os seguintes campos por data:\n\n- data (formato YYYY-MM-DD)\n- refeicao (ex: \"almo√ßo\", \"jantar\", etc.)\n- calorias (valor num√©rico)\n- proteina (valor num√©rico)\n- hora (ex: \"12:45\")\n\n### Comportamento esperado:\n\n1. Quando o usu√°rio enviar perguntas como:\n   - \"Quantas calorias eu comi hoje?\"\n   - \"Quanto de prote√≠na j√° consumi?\"\n   - \"Qual foi minha √∫ltima refei√ß√£o?\"\n\n2. Use a ferramenta `ConsultaNutricional` para buscar os registros da data de hoje (`{{ $now }}`).\n\n3. Some todas as calorias e prote√≠nas do dia e responda com algo como:\nüëâ \"Consultei aqui pra voc√™! Hoje voc√™ j√° consumiu **[X] kcal** e **[Y]g de prote√≠na**.\"\n\n4. Se houver m√∫ltiplas refei√ß√µes, voc√™ pode mencionar a √∫ltima refei√ß√£o registrada tamb√©m:\nüëâ \"Sua √∫ltima refei√ß√£o foi √†s 13:40, com 520 kcal e 38g de prote√≠na.\"\n\n5. Se **n√£o houver nenhum dado hoje**, diga:\nüëâ \"Ainda n√£o encontrei nenhuma refei√ß√£o registrada hoje. Que tal me mandar uma foto do seu prato agora?\"\n\n‚ö†Ô∏è Importante:\n- **N√£o use nenhuma ferramenta de grava√ß√£o.**\n- Apenas use a `ConsultaNutricional` para buscar dados.\n\nTodas as respostas devem ser em **portugu√™s**, com linguagem amig√°vel, simples e motivadora.\n\nData de hoje: {{ $now }}\n\nSomente responder assuntos relacionados a consulta nutricional, sempre que for perguntado sobre outro assunto, voltar para o contexto de nutri√ß√£o",
          "maxIterations": 15
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        1248,
        416
      ],
      "id": "37d8deaa-7f71-4b8b-98b9-12c777a30821",
      "name": "consultaNutricional"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1120,
        624
      ],
      "id": "fb0fbf37-639e-453c-8c30-eea813ecec68",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "LxESPA7gaRJpmXmF",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1ug3tnzSFttJhwdJKQpxLKCPANhLcI1kgjwQgQddEzws",
          "mode": "list",
          "cachedResultName": "registrarRefeicao",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ug3tnzSFttJhwdJKQpxLKCPANhLcI1kgjwQgQddEzws/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "P√°gina1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ug3tnzSFttJhwdJKQpxLKCPANhLcI1kgjwQgQddEzws/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        1456,
        624
      ],
      "id": "24735dd1-6716-46ef-a764-569257f35b1f",
      "name": "consultaNutricional1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "jGZrBabupy9L5lUE",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.conversation }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Voc√™ √© um agente nutricionista que recebe uma mensagem de texto contendo o resultado da an√°lise de uma imagem de um prato de comida. Sua tarefa √© interpretar esse conte√∫do e gerar uma resposta no formato JSON estruturado.\n\nA resposta **deve seguir exatamente** o seguinte formato:\n\n{\n  \"data\": \"YYYY-MM-DD\",\n  \"hora\": \"HH:mm\",\n  \"refeicao\": \"[descri√ß√£o completa da refei√ß√£o com alimentos e por√ß√µes]\",\n  \"calorias\": [n√∫mero inteiro],\n  \"proteina\": [n√∫mero inteiro],\n  \"source\": \"whatsapp\",\n  \"resumo\": \"‚úÖ Refei√ß√£o registrada com sucesso! Foram aproximadamente [calorias] kcal e [proteina]g de prote√≠na. Continue assim!\"\n}\n\n### Regras:\n\n* Use a **data e hora atual** no formato correto (ex: `\"2025-07-24\"` e `\"12:45\"`).\n* O campo `refeicao` deve conter a descri√ß√£o dos alimentos com por√ß√µes, exatamente como foi extra√≠do da an√°lise (ex: \"arroz (m√©dio), feij√£o (m√©dio), carne mo√≠da (m√©dia), salada (pequena)\").\n* O campo `source` **deve sempre ser** `\"whatsapp\"`.\n* O campo `resumo` deve ser uma mensagem amig√°vel que ser√° enviada ao usu√°rio confirmando o registro da refei√ß√£o, com os valores de calorias e prote√≠nas inseridos dinamicamente.\n\n### Se n√£o for poss√≠vel identificar calorias, prote√≠nas ou alimentos com clareza:\n\n* Retorne **apenas**:\n\n{\n  \"resumo\": \"N√£o consegui interpretar corretamente essa imagem. Pode enviar uma foto mais n√≠tida, por favor?\"\n}\n```\n\nTodas as respostas devem estar em **portugu√™s**. Seja objetivo, acolhedor e motivador.\n\nData de hoje: {{ $now }}",
          "maxIterations": 15
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        1216,
        848
      ],
      "id": "93107acd-1159-4b73-a7eb-d64913848b86",
      "name": "registrarRefeicao1"
    },
    {
      "parameters": {
        "content": "## CONSULTA CALORIAS \n ",
        "height": 460,
        "width": 996
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        928,
        304
      ],
      "id": "01a5b051-3410-47cd-addb-790f0a924466",
      "name": "Sticky Note"
    }
  ],
  "pinData": {},
  "connections": {
    "Convert to File": {
      "main": [
        [
          {
            "node": "Vision",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DownloadImage": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TypeMessage": {
      "main": [
        [
          {
            "node": "formatToLLM",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait5s1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "registrarRefeicao1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Vision": {
      "main": [
        [
          {
            "node": "formatToLLM3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WelcomeMessage": {
      "main": [
        []
      ]
    },
    "formatToLLM3": {
      "main": [
        [
          {
            "node": "registrarRefeicao1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait5s1": {
      "main": [
        [
          {
            "node": "DownloadImage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "TypeMessage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "registrarRefeicao1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "formatToLLM": {
      "main": [
        [
          {
            "node": "consultaNutricional",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "consultaNutricional": {
      "main": [
        [
          {
            "node": "RespondToUser1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "consultaNutricional",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "consultaNutricional1": {
      "ai_tool": [
        [
          {
            "node": "consultaNutricional",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "registrarRefeicao1": {
      "main": [
        [
          {
            "node": "RespondToUser",
            "type": "main",
            "index": 0
          },
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "61bf21ac-833d-402b-8edc-7601346acd2e",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "f56d2f5ba48d2ad4b177570c9770488715dd6722a50b40b69013ec823bdedd10"
  },
  "id": "cinrzuSV6JnpB9ds",
  "tags": []
}